/**
 * Gr4vy API
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * The version of the OpenAPI document: 1.1.0-beta
 * Contact: code@gr4vy.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

/**
* A gift card stored for a buyer.
*/
export class GiftCardSummary {
    /**
    * The type of this resource.
    */
    'type'?: GiftCardSummary.TypeEnum;
    /**
    * The ID of this gift card.
    */
    'id'?: string | null;
    /**
    * The unique ID for a merchant account.
    */
    'merchantAccountId'?: string;
    /**
    * The first 6 digits of the full gift card number.
    */
    'bin'?: string;
    /**
    * The 3 digits after the `bin` of the full gift card number.
    */
    'subBin'?: string;
    /**
    * The last 4 digits for the gift card.
    */
    'last4'?: string;
    /**
    * The date and time when this gift card expires. This is a full date/time and may be more accurate than the actual expiry date received by the gift card service.
    */
    'expirationDate'?: Date | null;
    /**
    * The amount remaining on the balance for this gift card according to the gift card service. This may be `null` if the balance could not be fetched.
    */
    'balance'?: number | null;
    /**
    * The ISO-4217 currency code that this gift card has a balance for.
    */
    'currency'?: string | null;
    /**
    * If the last balance update failed, this will contain the internal code for this error.
    */
    'balanceErrorCode'?: GiftCardSummary.BalanceErrorCodeEnum;
    /**
    * If the last balance update failed, this will contain the the raw error code received from the gift card provider.
    */
    'balanceRawErrorCode'?: string | null;
    /**
    * If the last balance update failed, this will contain the the raw error message received from the gift card provider.
    */
    'balanceRawErrorMessage'?: string | null;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "type",
            "baseName": "type",
            "type": "GiftCardSummary.TypeEnum"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "merchantAccountId",
            "baseName": "merchant_account_id",
            "type": "string"
        },
        {
            "name": "bin",
            "baseName": "bin",
            "type": "string"
        },
        {
            "name": "subBin",
            "baseName": "sub_bin",
            "type": "string"
        },
        {
            "name": "last4",
            "baseName": "last4",
            "type": "string"
        },
        {
            "name": "expirationDate",
            "baseName": "expiration_date",
            "type": "Date"
        },
        {
            "name": "balance",
            "baseName": "balance",
            "type": "number"
        },
        {
            "name": "currency",
            "baseName": "currency",
            "type": "string"
        },
        {
            "name": "balanceErrorCode",
            "baseName": "balance_error_code",
            "type": "GiftCardSummary.BalanceErrorCodeEnum"
        },
        {
            "name": "balanceRawErrorCode",
            "baseName": "balance_raw_error_code",
            "type": "string"
        },
        {
            "name": "balanceRawErrorMessage",
            "baseName": "balance_raw_error_message",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return GiftCardSummary.attributeTypeMap;
    }
}

export namespace GiftCardSummary {
    export enum TypeEnum {
        GiftCard = <any> 'gift-card'
    }
    export enum BalanceErrorCodeEnum {
        ExpiredCard = <any> 'expired_card',
        InactiveCard = <any> 'inactive_card',
        IncorrectCurrency = <any> 'incorrect_currency',
        InsufficientFunds = <any> 'insufficient_funds',
        InvalidAmount = <any> 'invalid_amount',
        InvalidGiftCard = <any> 'invalid_gift_card',
        InvalidServiceConfiguration = <any> 'invalid_service_configuration',
        InvalidServiceCredentials = <any> 'invalid_service_credentials',
        OperationCanceled = <any> 'operation_canceled',
        ServiceError = <any> 'service_error',
        ServiceNetworkError = <any> 'service_network_error',
        UnknownError = <any> 'unknown_error'
    }
}
