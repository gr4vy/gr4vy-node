/**
 * Gr4vy API
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * The version of the OpenAPI document: 1.1.0-beta
 * Contact: code@gr4vy.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

/**
* Features supported by the payment definition.
*/
export class PaymentServiceDefinitionSupportedFeatures {
    /**
    * Supports [capturing](#operation/capture-transaction) authorized transactions.
    */
    'delayedCapture'?: boolean;
    /**
    * Supports passing decrypted digital wallet (e.g. Apple Pay) tokens to the underlying processor.
    */
    'digitalWallets'?: boolean;
    /**
    * Supports processing network tokens by default.
    */
    'networkTokensDefault'?: boolean;
    /**
    * Supports toggling processing of network tokens on or off.
    */
    'networkTokensToggle'?: boolean;
    /**
    * Supports processing transactions with either raw PAN details or network tokens.
    */
    'openLoop'?: boolean;
    /**
    * Supports toggling processing as open-loop on or off.
    */
    'openLoopToggle'?: boolean;
    /**
    * Supports [partially refunding](#operation/refund-transaction) captured transactions.
    */
    'partialRefunds'?: boolean;
    /**
    * Supports storing a payment method via tokenization.
    */
    'paymentMethodTokenization'?: boolean;
    /**
    * Supports toggling tokenization for a payment method on or off from the dashboard.
    */
    'paymentMethodTokenizationToggle'?: boolean;
    /**
    * Supports [refunding](#operation/refund-transaction) captured transactions.
    */
    'refunds'?: boolean;
    /**
    * Requires merchant to set up `webhook_url` manually with provider.
    */
    'requiresWebhookSetup'?: boolean;
    /**
    * Supports hosted 3-D Secure with a redirect.
    */
    'threeDSecureHosted'?: boolean;
    /**
    * Supports passing 3-D Secure data to the underlying processor.
    */
    'threeDSecurePassThrough'?: boolean;
    /**
    * Supports verifying the credentials entered while setting up the underlying processor. This is for internal use only.
    */
    'verifyCredentials'?: boolean;
    /**
    * Supports [voiding](#operation/void-transaction) authorized transactions.
    */
    '_void'?: boolean;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "delayedCapture",
            "baseName": "delayed_capture",
            "type": "boolean"
        },
        {
            "name": "digitalWallets",
            "baseName": "digital_wallets",
            "type": "boolean"
        },
        {
            "name": "networkTokensDefault",
            "baseName": "network_tokens_default",
            "type": "boolean"
        },
        {
            "name": "networkTokensToggle",
            "baseName": "network_tokens_toggle",
            "type": "boolean"
        },
        {
            "name": "openLoop",
            "baseName": "open_loop",
            "type": "boolean"
        },
        {
            "name": "openLoopToggle",
            "baseName": "open_loop_toggle",
            "type": "boolean"
        },
        {
            "name": "partialRefunds",
            "baseName": "partial_refunds",
            "type": "boolean"
        },
        {
            "name": "paymentMethodTokenization",
            "baseName": "payment_method_tokenization",
            "type": "boolean"
        },
        {
            "name": "paymentMethodTokenizationToggle",
            "baseName": "payment_method_tokenization_toggle",
            "type": "boolean"
        },
        {
            "name": "refunds",
            "baseName": "refunds",
            "type": "boolean"
        },
        {
            "name": "requiresWebhookSetup",
            "baseName": "requires_webhook_setup",
            "type": "boolean"
        },
        {
            "name": "threeDSecureHosted",
            "baseName": "three_d_secure_hosted",
            "type": "boolean"
        },
        {
            "name": "threeDSecurePassThrough",
            "baseName": "three_d_secure_pass_through",
            "type": "boolean"
        },
        {
            "name": "verifyCredentials",
            "baseName": "verify_credentials",
            "type": "boolean"
        },
        {
            "name": "_void",
            "baseName": "void",
            "type": "boolean"
        }    ];

    static getAttributeTypeMap() {
        return PaymentServiceDefinitionSupportedFeatures.attributeTypeMap;
    }
}

