/**
 * Gr4vy API
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * The version of the OpenAPI document: 1.1.0-beta
 * Contact: code@gr4vy.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { PayoutPaymentMethodRequest } from './payoutPaymentMethodRequest';
import { PayoutRequestBuyer } from './payoutRequestBuyer';
import { PayoutRequestConnectionOptions } from './payoutRequestConnectionOptions';
import { PayoutRequestMerchant } from './payoutRequestMerchant';

/**
* Request body for creating new payout.
*/
export class PayoutRequest {
    /**
    * The amount to payout.
    */
    'amount': number;
    /**
    * The ISO-4217 currency code for the payout.
    */
    'currency': string;
    /**
    * The ID of the payment service to use for the payout.
    */
    'paymentServiceId': string;
    /**
    * The type of payout to process.
    */
    'category'?: PayoutRequest.CategoryEnum = PayoutRequest.CategoryEnum.OnlineGambling;
    /**
    * A value that can be used to match the payout against your own records.
    */
    'externalIdentifier'?: string | null;
    /**
    * The ID of the buyer to send the payout.
    */
    'buyerId'?: string | null;
    /**
    * The `external_identifier` of the buyer to send this payout to.
    */
    'buyerExternalIdentifier'?: string | null;
    'buyer'?: PayoutRequestBuyer | null;
    'merchant'?: PayoutRequestMerchant | null;
    'paymentMethod': PayoutPaymentMethodRequest;
    'connectionOptions'?: PayoutRequestConnectionOptions | null;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "amount",
            "baseName": "amount",
            "type": "number"
        },
        {
            "name": "currency",
            "baseName": "currency",
            "type": "string"
        },
        {
            "name": "paymentServiceId",
            "baseName": "payment_service_id",
            "type": "string"
        },
        {
            "name": "category",
            "baseName": "category",
            "type": "PayoutRequest.CategoryEnum"
        },
        {
            "name": "externalIdentifier",
            "baseName": "external_identifier",
            "type": "string"
        },
        {
            "name": "buyerId",
            "baseName": "buyer_id",
            "type": "string"
        },
        {
            "name": "buyerExternalIdentifier",
            "baseName": "buyer_external_identifier",
            "type": "string"
        },
        {
            "name": "buyer",
            "baseName": "buyer",
            "type": "PayoutRequestBuyer"
        },
        {
            "name": "merchant",
            "baseName": "merchant",
            "type": "PayoutRequestMerchant"
        },
        {
            "name": "paymentMethod",
            "baseName": "payment_method",
            "type": "PayoutPaymentMethodRequest"
        },
        {
            "name": "connectionOptions",
            "baseName": "connection_options",
            "type": "PayoutRequestConnectionOptions"
        }    ];

    static getAttributeTypeMap() {
        return PayoutRequest.attributeTypeMap;
    }
}

export namespace PayoutRequest {
    export enum CategoryEnum {
        OnlineGambling = <any> 'online_gambling'
    }
}
