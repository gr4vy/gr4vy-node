/**
 * Gr4vy API
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * The version of the OpenAPI document: 1.1.0-beta
 * Contact: code@gr4vy.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

/**
* An Apple Pay certificate record.
*/
export class ApplePayCertificate {
    /**
    * The type of this resource. Is always `apple-pay-certificate`.
    */
    'type'?: ApplePayCertificate.TypeEnum;
    /**
    * The unique identifier for this Apple Pay certificate record.
    */
    'id'?: string;
    /**
    * The name for this Apple Pay certificate which is used in the Gr4vy admin panel to give the Apple Pay certificate a human readable name.
    */
    'displayName'?: string;
    /**
    * The status of this Apple Pay certificate.
    */
    'status'?: ApplePayCertificate.StatusEnum;
    /**
    * The unique identifier representing a merchant for Apple Pay. This value is populated after the Apple Pay certificate record has been updated with the payment processing certificate received from Apple.
    */
    'appleMerchantId'?: string | null;
    /**
    * The hash value of the public key associated with this Apple Pay certificate. This value is populated after the Apple Pay certificate record has been updated with the payment processing certificate received from Apple.
    */
    'publicKeyHash'?: string | null;
    /**
    * The Certificate Signing Request to upload to the Apple Developer console when creating a new payment processing certificate.
    */
    'certificateSigningRequest'?: string | null;
    /**
    * The date and time this Apple Pay certificate expires. This value is populated after the Apple Pay certificate record has been updated with the payment processing certificate received from Apple.
    */
    'expiresAt'?: Date | null;
    /**
    * The date and time this Apple Pay certificate record was created in our system.
    */
    'createdAt'?: Date;
    /**
    * The date and time this Apple Pay certificate record was last updated.
    */
    'updatedAt'?: Date;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "type",
            "baseName": "type",
            "type": "ApplePayCertificate.TypeEnum"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "displayName",
            "baseName": "display_name",
            "type": "string"
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "ApplePayCertificate.StatusEnum"
        },
        {
            "name": "appleMerchantId",
            "baseName": "apple_merchant_id",
            "type": "string"
        },
        {
            "name": "publicKeyHash",
            "baseName": "public_key_hash",
            "type": "string"
        },
        {
            "name": "certificateSigningRequest",
            "baseName": "certificate_signing_request",
            "type": "string"
        },
        {
            "name": "expiresAt",
            "baseName": "expires_at",
            "type": "Date"
        },
        {
            "name": "createdAt",
            "baseName": "created_at",
            "type": "Date"
        },
        {
            "name": "updatedAt",
            "baseName": "updated_at",
            "type": "Date"
        }    ];

    static getAttributeTypeMap() {
        return ApplePayCertificate.attributeTypeMap;
    }
}

export namespace ApplePayCertificate {
    export enum TypeEnum {
        ApplePayCertificate = <any> 'apple-pay-certificate'
    }
    export enum StatusEnum {
        Active = <any> 'active',
        Expired = <any> 'expired',
        Incomplete = <any> 'incomplete'
    }
}
