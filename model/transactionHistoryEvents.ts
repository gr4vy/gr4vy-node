/**
 * Gr4vy API
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * The version of the OpenAPI document: 1.1.0-beta
 * Contact: code@gr4vy.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { AntiFraudDecisionErrorEvent } from './antiFraudDecisionErrorEvent';
import { AntiFraudDecisionEvent } from './antiFraudDecisionEvent';
import { AntiFraudDecisionSkippedEvent } from './antiFraudDecisionSkippedEvent';
import { AntiFraudTransactionStatusUpdateErrorEvent } from './antiFraudTransactionStatusUpdateErrorEvent';
import { AntiFraudTransactionStatusUpdateEvent } from './antiFraudTransactionStatusUpdateEvent';
import { AntiFraudWebhookEvent } from './antiFraudWebhookEvent';
import { BINLookupRequest } from './bINLookupRequest';
import { DigitalWalletApplePayTokenDecrypted } from './digitalWalletApplePayTokenDecrypted';
import { DigitalWalletClickToPayTokenDecrypted } from './digitalWalletClickToPayTokenDecrypted';
import { DigitalWalletGooglePayTokenDecrypted } from './digitalWalletGooglePayTokenDecrypted';
import { GiftCardRedemptionFailed } from './giftCardRedemptionFailed';
import { GiftCardRedemptionSucceeded } from './giftCardRedemptionSucceeded';
import { GiftCardRefundFailed } from './giftCardRefundFailed';
import { GiftCardRefundSucceeded } from './giftCardRefundSucceeded';
import { PaymentConnectorExternalTransactionRequest } from './paymentConnectorExternalTransactionRequest';
import { PaymentConnectorResponseTransactionAuthorizationFailedEvent } from './paymentConnectorResponseTransactionAuthorizationFailedEvent';
import { PaymentConnectorResponseTransactionAuthorizationSucceededEvent } from './paymentConnectorResponseTransactionAuthorizationSucceededEvent';
import { PaymentConnectorResponseTransactionCaptureDeclinedEvent } from './paymentConnectorResponseTransactionCaptureDeclinedEvent';
import { PaymentConnectorResponseTransactionCaptureFailedEvent } from './paymentConnectorResponseTransactionCaptureFailedEvent';
import { PaymentConnectorResponseTransactionCaptureSucceededEvent } from './paymentConnectorResponseTransactionCaptureSucceededEvent';
import { PaymentConnectorResponseTransactionDeclinedEvent } from './paymentConnectorResponseTransactionDeclinedEvent';
import { PaymentConnectorResponseTransactionVoidDeclinedEvent } from './paymentConnectorResponseTransactionVoidDeclinedEvent';
import { PaymentConnectorResponseTransactionVoidFailedEvent } from './paymentConnectorResponseTransactionVoidFailedEvent';
import { PaymentConnectorResponseTransactionVoidSucceededEvent } from './paymentConnectorResponseTransactionVoidSucceededEvent';
import { ThreeDSecureAuthenticationRequestEvent } from './threeDSecureAuthenticationRequestEvent';
import { ThreeDSecurePreparationRequestEvent } from './threeDSecurePreparationRequestEvent';
import { ThreeDSecureRequestErrorEvent } from './threeDSecureRequestErrorEvent';
import { ThreeDSecureResultRequestEvent } from './threeDSecureResultRequestEvent';
import { ThreeDSecureSuccessEvent } from './threeDSecureSuccessEvent';

/**
* A list of transaction history events.
*/
export class TransactionHistoryEvents {
    /**
    * A list of events related to processing a transaction.
    */
    'items'?: Array<BINLookupRequest | ThreeDSecureAuthenticationRequestEvent | ThreeDSecureSuccessEvent | ThreeDSecureRequestErrorEvent | ThreeDSecurePreparationRequestEvent | ThreeDSecureResultRequestEvent | AntiFraudDecisionEvent | AntiFraudDecisionErrorEvent | AntiFraudDecisionSkippedEvent | AntiFraudTransactionStatusUpdateEvent | AntiFraudTransactionStatusUpdateErrorEvent | AntiFraudWebhookEvent | DigitalWalletApplePayTokenDecrypted | DigitalWalletClickToPayTokenDecrypted | DigitalWalletGooglePayTokenDecrypted | GiftCardRedemptionFailed | GiftCardRedemptionSucceeded | GiftCardRefundFailed | GiftCardRefundSucceeded | PaymentConnectorResponseTransactionAuthorizationSucceededEvent | PaymentConnectorResponseTransactionDeclinedEvent | PaymentConnectorResponseTransactionAuthorizationFailedEvent | PaymentConnectorResponseTransactionCaptureDeclinedEvent | PaymentConnectorResponseTransactionCaptureFailedEvent | PaymentConnectorResponseTransactionCaptureSucceededEvent | PaymentConnectorResponseTransactionVoidDeclinedEvent | PaymentConnectorResponseTransactionVoidFailedEvent | PaymentConnectorResponseTransactionVoidSucceededEvent | PaymentConnectorExternalTransactionRequest>;
    /**
    * The limit applied to request. This represents the number of items that are at maximum returned by this request.
    */
    'limit'?: number;
    /**
    * The cursor that represents the next page of results. Use the `cursor` query parameter to fetch this page of items.
    */
    'nextCursor'?: string | null;
    /**
    * The cursor that represents the next page of results. Use the `cursor` query parameter to fetch this page of items.
    */
    'previousCursor'?: string | null;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "items",
            "baseName": "items",
            "type": "Array<BINLookupRequest | ThreeDSecureAuthenticationRequestEvent | ThreeDSecureSuccessEvent | ThreeDSecureRequestErrorEvent | ThreeDSecurePreparationRequestEvent | ThreeDSecureResultRequestEvent | AntiFraudDecisionEvent | AntiFraudDecisionErrorEvent | AntiFraudDecisionSkippedEvent | AntiFraudTransactionStatusUpdateEvent | AntiFraudTransactionStatusUpdateErrorEvent | AntiFraudWebhookEvent | DigitalWalletApplePayTokenDecrypted | DigitalWalletClickToPayTokenDecrypted | DigitalWalletGooglePayTokenDecrypted | GiftCardRedemptionFailed | GiftCardRedemptionSucceeded | GiftCardRefundFailed | GiftCardRefundSucceeded | PaymentConnectorResponseTransactionAuthorizationSucceededEvent | PaymentConnectorResponseTransactionDeclinedEvent | PaymentConnectorResponseTransactionAuthorizationFailedEvent | PaymentConnectorResponseTransactionCaptureDeclinedEvent | PaymentConnectorResponseTransactionCaptureFailedEvent | PaymentConnectorResponseTransactionCaptureSucceededEvent | PaymentConnectorResponseTransactionVoidDeclinedEvent | PaymentConnectorResponseTransactionVoidFailedEvent | PaymentConnectorResponseTransactionVoidSucceededEvent | PaymentConnectorExternalTransactionRequest>"
        },
        {
            "name": "limit",
            "baseName": "limit",
            "type": "number"
        },
        {
            "name": "nextCursor",
            "baseName": "next_cursor",
            "type": "string"
        },
        {
            "name": "previousCursor",
            "baseName": "previous_cursor",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return TransactionHistoryEvents.attributeTypeMap;
    }
}

