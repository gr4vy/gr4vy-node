/**
 * Gr4vy API (Beta)
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@gr4vy.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { PaymentMethod } from './paymentMethod';
import { PaymentService } from './paymentService';

/**
* Captures a transaction.
*/
export class Transaction {
    /**
    * The type of this resource. Is always `transaction`.
    */
    'type'?: Transaction.TypeEnum;
    /**
    * The unique identifier for this transaction.
    */
    'id'?: string;
    /**
    * The status of the transaction being processed. This is different from the `status` field in that it represents the status of the transaction at the payment processor, not the status of the transaction created in Gr4vy.
    */
    'status'?: Transaction.StatusEnum;
    /**
    * The currency amount captured by this transaction.
    */
    'amount'?: number;
    /**
    * The currency code for this transaction.
    */
    'currency'?: string;
    'payment_method'?: PaymentMethod;
    /**
    * The date and time when this transaction was created in our system.
    */
    'created_at'?: Date;
    /**
    * An external identifier that can be used to match the transaction against your own records.
    */
    'external_identifier'?: string | null;
    /**
    * Defines when the transaction was last updated.
    */
    'updated_at'?: Date;
    'payment_service'?: PaymentService;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "type",
            "baseName": "type",
            "type": "Transaction.TypeEnum"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "Transaction.StatusEnum"
        },
        {
            "name": "amount",
            "baseName": "amount",
            "type": "number"
        },
        {
            "name": "currency",
            "baseName": "currency",
            "type": "string"
        },
        {
            "name": "payment_method",
            "baseName": "payment_method",
            "type": "PaymentMethod"
        },
        {
            "name": "created_at",
            "baseName": "created_at",
            "type": "Date"
        },
        {
            "name": "external_identifier",
            "baseName": "external_identifier",
            "type": "string"
        },
        {
            "name": "updated_at",
            "baseName": "updated_at",
            "type": "Date"
        },
        {
            "name": "payment_service",
            "baseName": "payment_service",
            "type": "PaymentService"
        }    ];

    static getAttributeTypeMap() {
        return Transaction.attributeTypeMap;
    }
}

export namespace Transaction {
    export enum TypeEnum {
        Transaction = <any> 'transaction'
    }
    export enum StatusEnum {
        Processing = <any> 'processing',
        ProcessingFailed = <any> 'processing_failed',
        Captured = <any> 'captured',
        CapturePending = <any> 'capture_pending',
        CaptureDeclined = <any> 'capture_declined',
        Authorized = <any> 'authorized',
        AuthorizationPending = <any> 'authorization_pending',
        AuthorizationDeclined = <any> 'authorization_declined',
        AuthorizationExpired = <any> 'authorization_expired',
        AuthorizationVoided = <any> 'authorization_voided',
        Refunded = <any> 'refunded',
        BuyerApprovalPending = <any> 'buyer_approval_pending',
        BuyerApprovalDeclined = <any> 'buyer_approval_declined',
        BuyerApprovalTimedout = <any> 'buyer_approval_timedout',
        BuyerApproved = <any> 'buyer_approved'
    }
}
