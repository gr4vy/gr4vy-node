/**
 * Gr4vy API
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * The version of the OpenAPI document: 1.1.0-beta
 * Contact: code@gr4vy.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { ReportExecutionSummary } from './reportExecutionSummary';
import { ReportSpec } from './reportSpec';

/**
* A report record.
*/
export class Report {
    /**
    * The date and time this report was created in our system.
    */
    'createdAt'?: Date;
    /**
    * The date and time this report was last updated.
    */
    'updatedAt'?: Date;
    /**
    * The date and time this report will next be executed, provided that `schedule_enabled` is `true`. This value is null if this is a one-off report.
    */
    'nextExecutionAt'?: Date | null;
    /**
    * The description of this report.
    */
    'description'?: string | null;
    /**
    * Specifies the schedule of this report.  If this is a one-off report, this value is `once`.  If this is a recurring report, this value is set to the frequency by which the report will be executed. For example, a `monthly` schedule means that this report will be periodically executed at the start of each month.  Note that a `weekly` schedule means that the report is executed at the start of every Monday.
    */
    'schedule'?: Report.ScheduleEnum;
    /**
    * Indicates whether this report\'s scheduling is enabled. This value can only be set to `true` if this is a recurring report.  When this value is set to `true`, this report will be executed at the `next_execution_at` date and time.  When this value is set to `false`, future executions of this report are paused until this value is set to `true` again.
    */
    'scheduleEnabled'?: boolean;
    /**
    * The time zone in which the next execution will be scheduled. This value is used to calculate this report\'s `next_execution_at` value and is only relevant if this is a recurring report. This time zone is also used to calculate the timestamp range for reports that use date-time placeholders. Date-time placeholders are dynamic timestamps that change with every report execution.
    */
    'scheduleTimezone'?: string;
    'spec'?: ReportSpec;
    /**
    * Details of the latest execution of this report.
    */
    'latestExecution'?: ReportExecutionSummary | null;
    /**
    * The type of this resource. Is always `report`.
    */
    'type'?: Report.TypeEnum;
    /**
    * The unique identifier for this report.
    */
    'id'?: string;
    /**
    * The unique ID for a merchant account.
    */
    'merchantAccountId'?: string;
    /**
    * The name of this report.
    */
    'name'?: string;
    /**
    * The unique identifier for the creator of this report.
    */
    'creatorId'?: string | null;
    /**
    * The name of the creator of this report.
    */
    'creatorDisplayName'?: string | null;
    /**
    * The type of the creator of this report.
    */
    'creatorType'?: Report.CreatorTypeEnum;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "createdAt",
            "baseName": "created_at",
            "type": "Date"
        },
        {
            "name": "updatedAt",
            "baseName": "updated_at",
            "type": "Date"
        },
        {
            "name": "nextExecutionAt",
            "baseName": "next_execution_at",
            "type": "Date"
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string"
        },
        {
            "name": "schedule",
            "baseName": "schedule",
            "type": "Report.ScheduleEnum"
        },
        {
            "name": "scheduleEnabled",
            "baseName": "schedule_enabled",
            "type": "boolean"
        },
        {
            "name": "scheduleTimezone",
            "baseName": "schedule_timezone",
            "type": "string"
        },
        {
            "name": "spec",
            "baseName": "spec",
            "type": "ReportSpec"
        },
        {
            "name": "latestExecution",
            "baseName": "latest_execution",
            "type": "ReportExecutionSummary"
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "Report.TypeEnum"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "merchantAccountId",
            "baseName": "merchant_account_id",
            "type": "string"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "creatorId",
            "baseName": "creator_id",
            "type": "string"
        },
        {
            "name": "creatorDisplayName",
            "baseName": "creator_display_name",
            "type": "string"
        },
        {
            "name": "creatorType",
            "baseName": "creator_type",
            "type": "Report.CreatorTypeEnum"
        }    ];

    static getAttributeTypeMap() {
        return Report.attributeTypeMap;
    }
}

export namespace Report {
    export enum ScheduleEnum {
        Daily = <any> 'daily',
        Monthly = <any> 'monthly',
        Once = <any> 'once',
        Weekly = <any> 'weekly'
    }
    export enum TypeEnum {
        Report = <any> 'report'
    }
    export enum CreatorTypeEnum {
        User = <any> 'user',
        PrivateKey = <any> 'private_key'
    }
}
