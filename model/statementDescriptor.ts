/**
 * Gr4vy API
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * The version of the OpenAPI document: 1.1.0-beta
 * Contact: code@gr4vy.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

/**
* The statement descriptor is the text to be shown on the buyer\'s statements.  The specific usage of these fields will depend on the capabilities of the underlying PSP and bank. As a typical example, \'name\' and \'description\' could be concatenated using \'* \' as a separator, and then the resulting descriptor would be truncated to 22 characters by the issuing bank.
*/
export class StatementDescriptor {
    /**
    * Reflects your doing business as (DBA) name.  Other validations: 1. Contains only Latin characters. 2. Contain at least one letter 3. Does not contain any of the special characters `< > \\ \' \" *` 4. Supports:   1. Lowercase: `a-z`   2. Uppercase: `A-Z`   3. Numbers: `0-9`   4. Spaces: ` `   5. Special characters: `. , _ - ? + /`
    */
    'name'?: string | null;
    /**
    * A short description about the purchase.  Other validations: 1. Contains only Latin characters. 2. Contain at least one letter 3. Does not contain any of the special characters `< > \\ \' \" *` 4. Supports:   1. Lowercase: `a-z`   2. Uppercase: `A-Z`   3. Numbers: `0-9`   4. Spaces: ` `   5. Special characters: `. , _ - ? + /`
    */
    'description'?: string | null;
    /**
    * City from which the charge originated.
    */
    'city'?: string | null;
    /**
    * The value in the phone number field of a customer\'s statement. The phone number to use for this request. This expect the number in the [E164 number standard](https://www.twilio.com/docs/glossary/what-e164).
    */
    'phoneNumber'?: string | null;
    /**
    * The value in the URL/web address field of a customer\'s statement.
    */
    'url'?: string | null;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string"
        },
        {
            "name": "city",
            "baseName": "city",
            "type": "string"
        },
        {
            "name": "phoneNumber",
            "baseName": "phone_number",
            "type": "string"
        },
        {
            "name": "url",
            "baseName": "url",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return StatementDescriptor.attributeTypeMap;
    }
}

