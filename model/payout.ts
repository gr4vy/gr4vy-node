/**
 * Gr4vy API
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * The version of the OpenAPI document: 1.1.0-beta
 * Contact: code@gr4vy.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { BuyerSnapshot } from './buyerSnapshot';
import { PaymentMethodSnapshot } from './paymentMethodSnapshot';
import { PaymentServiceSnapshot } from './paymentServiceSnapshot';
import { PayoutMerchant } from './payoutMerchant';

export class Payout {
    /**
    * The type of this resource. Is always `payout`.
    */
    'type'?: Payout.TypeEnum;
    /**
    * The ID of a payout.
    */
    'id'?: string;
    /**
    * The optional ID of the merchant account this payout should be assigned to.
    */
    'merchantAccountId'?: string | null;
    /**
    * The monetary amount for this payout, in the smallest currency unit for the given currency, for example `1299` cents to create an authorization for `$12.99`.
    */
    'amount'?: number;
    /**
    * A supported ISO-4217 currency code.
    */
    'currency'?: string;
    /**
    * The date and time when this payout was created.
    */
    'createdAt'?: Date;
    /**
    * The date and time when this payout was created.
    */
    'updatedAt'?: Date;
    /**
    * The payment service used for this payout.
    */
    'paymentService'?: PaymentServiceSnapshot;
    /**
    * The ID of the payout in the underlying payment service.
    */
    'paymentServicePayoutId'?: string | null;
    /**
    * The type of payout to process.
    */
    'category'?: Payout.CategoryEnum;
    /**
    * The status of the payout.
    */
    'status'?: Payout.StatusEnum;
    /**
    * An external identifier that can be used to match the payout against your own records. This value needs to be unique for all buyers.
    */
    'externalIdentifier'?: string | null;
    'merchant'?: PayoutMerchant | null;
    /**
    * The buyer used for this transaction.
    */
    'buyer'?: BuyerSnapshot;
    /**
    * The payment method used for this payout.
    */
    'paymentMethod'?: PaymentMethodSnapshot;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "type",
            "baseName": "type",
            "type": "Payout.TypeEnum"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "merchantAccountId",
            "baseName": "merchant_account_id",
            "type": "string"
        },
        {
            "name": "amount",
            "baseName": "amount",
            "type": "number"
        },
        {
            "name": "currency",
            "baseName": "currency",
            "type": "string"
        },
        {
            "name": "createdAt",
            "baseName": "created_at",
            "type": "Date"
        },
        {
            "name": "updatedAt",
            "baseName": "updated_at",
            "type": "Date"
        },
        {
            "name": "paymentService",
            "baseName": "payment_service",
            "type": "PaymentServiceSnapshot"
        },
        {
            "name": "paymentServicePayoutId",
            "baseName": "payment_service_payout_id",
            "type": "string"
        },
        {
            "name": "category",
            "baseName": "category",
            "type": "Payout.CategoryEnum"
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "Payout.StatusEnum"
        },
        {
            "name": "externalIdentifier",
            "baseName": "external_identifier",
            "type": "string"
        },
        {
            "name": "merchant",
            "baseName": "merchant",
            "type": "PayoutMerchant"
        },
        {
            "name": "buyer",
            "baseName": "buyer",
            "type": "BuyerSnapshot"
        },
        {
            "name": "paymentMethod",
            "baseName": "payment_method",
            "type": "PaymentMethodSnapshot"
        }    ];

    static getAttributeTypeMap() {
        return Payout.attributeTypeMap;
    }
}

export namespace Payout {
    export enum TypeEnum {
        Payout = <any> 'payout'
    }
    export enum CategoryEnum {
        OnlineGambling = <any> 'online_gambling'
    }
    export enum StatusEnum {
        Pending = <any> 'pending',
        Failed = <any> 'failed',
        Declined = <any> 'declined',
        Succeeded = <any> 'succeeded'
    }
}
