/**
 * Gr4vy API (Beta)
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: code@gr4vy.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { PaymentServiceUpdateFields } from './paymentServiceUpdateFields';

/**
* Request body for updating an active payment service.
*/
export class PaymentServiceUpdate {
    /**
    * A custom name for the payment service. This will be shown in the Admin UI.
    */
    'displayName'?: string;
    /**
    * A list of fields, each containing a key-value pair for each field defined by the definition for this payment service e.g. for stripe-card `secret_key` is required and so must be sent with in this field.
    */
    'fields'?: Array<PaymentServiceUpdateFields>;
    /**
    * A list of countries that this payment service needs to support in ISO two-letter code format.
    */
    'acceptedCountries'?: Array<string>;
    /**
    * A list of currencies that this payment service needs to support in ISO 4217 three-letter code format.
    */
    'acceptedCurrencies'?: Array<string>;
    /**
    * Defines if the credentials are intended for the service\'s live API or sandbox/test API.
    */
    'credentialsMode'?: PaymentServiceUpdate.CredentialsModeEnum;
    /**
    * Defines if this service is currently active or not.
    */
    'active'?: boolean;
    /**
    * Determines the Gr4vy environments in which this service should be available. This can be used in combination with the `environment` parameters in the payment method and transaction APIs to route transactions through this service.
    */
    'environments'?: Array<PaymentServiceUpdate.EnvironmentsEnum>;
    /**
    * The numeric rank of a payment service. Payment services with a lower position value are processed first. When a payment services is inserted at a position, any payment services with the the same value or higher are shifted down a position accordingly. When left out, the payment service is inserted at the end of the list.
    */
    'position'?: number;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "displayName",
            "baseName": "display_name",
            "type": "string"
        },
        {
            "name": "fields",
            "baseName": "fields",
            "type": "Array<PaymentServiceUpdateFields>"
        },
        {
            "name": "acceptedCountries",
            "baseName": "accepted_countries",
            "type": "Array<string>"
        },
        {
            "name": "acceptedCurrencies",
            "baseName": "accepted_currencies",
            "type": "Array<string>"
        },
        {
            "name": "credentialsMode",
            "baseName": "credentials_mode",
            "type": "PaymentServiceUpdate.CredentialsModeEnum"
        },
        {
            "name": "active",
            "baseName": "active",
            "type": "boolean"
        },
        {
            "name": "environments",
            "baseName": "environments",
            "type": "Array<PaymentServiceUpdate.EnvironmentsEnum>"
        },
        {
            "name": "position",
            "baseName": "position",
            "type": "number"
        }    ];

    static getAttributeTypeMap() {
        return PaymentServiceUpdate.attributeTypeMap;
    }
}

export namespace PaymentServiceUpdate {
    export enum CredentialsModeEnum {
        Sandbox = <any> 'sandbox',
        Live = <any> 'live'
    }
    export enum EnvironmentsEnum {
        Development = <any> 'development',
        Staging = <any> 'staging',
        Production = <any> 'production'
    }
}
