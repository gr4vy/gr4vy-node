/**
 * Gr4vy API
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * The version of the OpenAPI document: 1.1.0-beta
 * Contact: code@gr4vy.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { CartItem } from './cartItem';
import { PaymentLinkBuyer } from './paymentLinkBuyer';
import { PaymentLinkShippingDetails } from './paymentLinkShippingDetails';
import { PaymentLinkStatementDescriptor } from './paymentLinkStatementDescriptor';

export class PaymentLink {
    /**
    * The ID of a payment link.
    */
    'id'?: string;
    /**
    * The type of this resource. Is always `payment_link`.
    */
    'type'?: PaymentLink.TypeEnum;
    /**
    * The monetary amount for this payment link, in the smallest currency unit for the given currency, for example `1299` cents to create an authorization for `$12.99`.
    */
    'amount'?: number;
    /**
    * A supported ISO-4217 currency code.
    */
    'currency'?: string;
    /**
    * The date and time when this payment link was created.
    */
    'createdAt'?: Date;
    /**
    * The date and time when this payment link was created.
    */
    'updatedAt'?: Date;
    /**
    * The date and time when this payment link expires.
    */
    'expiresAt'?: Date;
    'status'?: PaymentLink.StatusEnum;
    /**
    * A value that can be used to match the payment link against your own records.
    */
    'externalIdentifier'?: string | null;
    'statementDescriptor'?: PaymentLinkStatementDescriptor | null;
    /**
    * The locale used to translate text within the payment link.
    */
    'locale'?: PaymentLink.LocaleEnum;
    /**
    * The name of the merchant to display on the payment link.
    */
    'merchantName'?: string | null;
    /**
    * The URL of the merchant to display on the payment link.
    */
    'merchantUrl'?: string | null;
    /**
    * The URL of the merchant banner to display on the payment link.
    */
    'merchantBannerUrl'?: string | null;
    /**
    * The color code of the merchant to display on the payment link.
    */
    'merchantColor'?: string | null;
    /**
    * The message to display on the payment link.
    */
    'merchantMessage'?: string | null;
    /**
    * The URL of the merchant terms and conditions to display on the payment link.
    */
    'merchantTermsAndConditionsUrl'?: string | null;
    /**
    * The URL of the merchant favicon icon.
    */
    'merchantFaviconUrl'?: string | null;
    /**
    * The 2-letter ISO code of the country of the transaction. This is used to filter the payment services that is used to process the transaction. 
    */
    'country'?: string | null;
    /**
    * The intent of the payment link.
    */
    'intent'?: PaymentLink.IntentEnum;
    /**
    * The URL to redirect the buyer to after payment.
    */
    'returnUrl'?: string | null;
    /**
    * An array of cart items that represents the line items of a payment link.
    */
    'cartItems'?: Array<CartItem>;
    /**
    * Any additional information about the payment link that you would like to store as key-value pairs. This data is passed to payment service providers that support it.
    */
    'metadata'?: { [key: string]: string; } | null;
    /**
    * The source of the payment link. Defaults to `ecommerce`.
    */
    'paymentSource'?: PaymentLink.PaymentSourceEnum;
    'buyer'?: PaymentLinkBuyer | null;
    'shippingDetails'?: PaymentLinkShippingDetails | null;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "PaymentLink.TypeEnum"
        },
        {
            "name": "amount",
            "baseName": "amount",
            "type": "number"
        },
        {
            "name": "currency",
            "baseName": "currency",
            "type": "string"
        },
        {
            "name": "createdAt",
            "baseName": "created_at",
            "type": "Date"
        },
        {
            "name": "updatedAt",
            "baseName": "updated_at",
            "type": "Date"
        },
        {
            "name": "expiresAt",
            "baseName": "expires_at",
            "type": "Date"
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "PaymentLink.StatusEnum"
        },
        {
            "name": "externalIdentifier",
            "baseName": "external_identifier",
            "type": "string"
        },
        {
            "name": "statementDescriptor",
            "baseName": "statement_descriptor",
            "type": "PaymentLinkStatementDescriptor"
        },
        {
            "name": "locale",
            "baseName": "locale",
            "type": "PaymentLink.LocaleEnum"
        },
        {
            "name": "merchantName",
            "baseName": "merchant_name",
            "type": "string"
        },
        {
            "name": "merchantUrl",
            "baseName": "merchant_url",
            "type": "string"
        },
        {
            "name": "merchantBannerUrl",
            "baseName": "merchant_banner_url",
            "type": "string"
        },
        {
            "name": "merchantColor",
            "baseName": "merchant_color",
            "type": "string"
        },
        {
            "name": "merchantMessage",
            "baseName": "merchant_message",
            "type": "string"
        },
        {
            "name": "merchantTermsAndConditionsUrl",
            "baseName": "merchant_terms_and_conditions_url",
            "type": "string"
        },
        {
            "name": "merchantFaviconUrl",
            "baseName": "merchant_favicon_url",
            "type": "string"
        },
        {
            "name": "country",
            "baseName": "country",
            "type": "string"
        },
        {
            "name": "intent",
            "baseName": "intent",
            "type": "PaymentLink.IntentEnum"
        },
        {
            "name": "returnUrl",
            "baseName": "return_url",
            "type": "string"
        },
        {
            "name": "cartItems",
            "baseName": "cart_items",
            "type": "Array<CartItem>"
        },
        {
            "name": "metadata",
            "baseName": "metadata",
            "type": "{ [key: string]: string; }"
        },
        {
            "name": "paymentSource",
            "baseName": "payment_source",
            "type": "PaymentLink.PaymentSourceEnum"
        },
        {
            "name": "buyer",
            "baseName": "buyer",
            "type": "PaymentLinkBuyer"
        },
        {
            "name": "shippingDetails",
            "baseName": "shipping_details",
            "type": "PaymentLinkShippingDetails"
        }    ];

    static getAttributeTypeMap() {
        return PaymentLink.attributeTypeMap;
    }
}

export namespace PaymentLink {
    export enum TypeEnum {
        PaymentLink = <any> 'payment_link'
    }
    export enum StatusEnum {
        Active = <any> 'active',
        Expired = <any> 'expired'
    }
    export enum LocaleEnum {
        En = <any> 'en',
        EnGb = <any> 'en-GB',
        Es = <any> 'es',
        Pt = <any> 'pt',
        PtBr = <any> 'pt-BR'
    }
    export enum IntentEnum {
        Authorize = <any> 'authorize',
        Capture = <any> 'capture'
    }
    export enum PaymentSourceEnum {
        Ecommerce = <any> 'ecommerce',
        Moto = <any> 'moto',
        Recurring = <any> 'recurring',
        Installment = <any> 'installment',
        CardOnFile = <any> 'card_on_file'
    }
}
